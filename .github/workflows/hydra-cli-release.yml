name: publish
on:
  push:
    branches:
      - master
      - dev
      - ci-test
      - ci-lerna
      - ci-lerna-test

env:
  CI: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Authenticate with Registry
        run: |
          echo "Branch name: ${{ steps.extract_branch.outputs.branch }}"
          yarn logout
          echo "always-auth=true" > .npmrc
          echo "@dzlzv:registry=https://registry.npmjs.org/" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Lerna version 
        run: |
          yarn install --frozen-lockfile
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          yarn lerna version --conventional-commits --yes
      - name: Lerna publish next
        if: steps.extract_branch.outputs.branch != 'master'
        run: |
          yarn lerna publish from-git --dist-tag dev --yes
      - name: Lerna release from master
        if: steps.extract_branch.outputs.branch == 'master'
        run: |
          yarn lerna publish from-git --dist-tag latest --yes
      #  if: steps.check.outputs.changed == 'true'
      #  run: |
      #    git config --global user.name 'github-actions'
      #    git config --global user.email 'github-actions@github.com'
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Set Release Version
      # if: steps.check.outputs.changed == 'true'
      # shell: bash -ex {0}
      # run: |
      #   RELEASE_VERSION=$(node -p 'require("./packages/hydra-cli/package.json").version')
      #   echo "::set-output name=RELEASE_VERSION::${RELEASE_VERSION}"
      #- name: Create Git Tag
      #  if: steps.check.outputs.changed == 'true'
      #  uses: azu/action-package-version-to-git-tag@v1
      #  with:
      #    version: ${{ env.RELEASE_VERSION }}
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
      #    github_repo: ${{ github.repository }}
      #    git_commit_sha: ${{ github.sha }}
      #    git_tag_prefix: "hydra-cli-v"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Hydra-cli release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: 12.x
      #     registry-url: 'https://registry.npmjs.org'
      #     always-auth: true
      # - run: yarn
      # - run: yarn workspace @dzlzv/hydra-cli build
      # - run: "echo $(npm whoami)"
      # - run: npm set //registry.npmjs.org/:_authToken ${NODE_AUTH_TOKEN}
      # - run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc && cd ./packages/hydra-cli && npm publish --access public 
  